[
    {
        "id": "8dd021bb.b57a4",
        "type": "tab",
        "label": "Brewster",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7c983f7.38453c",
        "type": "tab",
        "label": "INPUT HARDWARE",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ba97d22d.3df94",
        "type": "tab",
        "label": "Button Press vs. Hold",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d4d2aaa4.3f773",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "brewsterdb",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x"
    },
    {
        "id": "66b6f4fd.14bd8c",
        "type": "ui_group",
        "name": "TEMPERATUUR",
        "tab": "818280f8.fbf2d",
        "order": 1,
        "disp": true,
        "width": 7,
        "collapse": false
    },
    {
        "id": "35700b71.03d264",
        "type": "ui_group",
        "name": "T2",
        "tab": "b30d8d21.aaa0f8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "27527a91.1832fe",
        "type": "ui_group",
        "name": "T3",
        "tab": "b30d8d21.aaa0f8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "92c7af30.17e9a8",
        "type": "serial-port",
        "serialport": "/dev/ttyACM0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "b30d8d21.aaa0f8",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "39d3a6b0.0f5642",
        "type": "ui_group",
        "name": "T3",
        "tab": "593a0f7e.e74b08",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "593a0f7e.e74b08",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "66f95b6e.2ba5d4",
        "type": "ui_group",
        "name": "KRANEN",
        "tab": "818280f8.fbf2d",
        "order": 4,
        "disp": true,
        "width": 5,
        "collapse": true
    },
    {
        "id": "58c426a1.17a658",
        "type": "ui_group",
        "name": "KRANEN",
        "tab": "818280f8.fbf2d",
        "order": 5,
        "disp": true,
        "width": 5,
        "collapse": true
    },
    {
        "id": "720d2ed2.786f8",
        "type": "ui_group",
        "name": "BROUW-PROGRAMMA",
        "tab": "818280f8.fbf2d",
        "order": 6,
        "disp": true,
        "width": 7,
        "collapse": true
    },
    {
        "id": "4da78f89.fde46",
        "type": "ui_group",
        "name": "BEDIENING VERWARMING",
        "tab": "818280f8.fbf2d",
        "order": 3,
        "disp": true,
        "width": "7",
        "collapse": true
    },
    {
        "id": "818280f8.fbf2d",
        "type": "ui_tab",
        "name": "EFFORT BREWERY",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "acbf4118.edba6",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "Gill Sans,Geneva,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "Gill Sans,Geneva,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "5ce5aba2.860bc4",
        "type": "ui_group",
        "name": "TEMPERATUUR LOG",
        "tab": "818280f8.fbf2d",
        "order": 2,
        "disp": true,
        "width": 7,
        "collapse": false
    },
    {
        "id": "28090666.451f6a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "27527a91.1832fe",
        "order": 1,
        "width": 2,
        "height": 1
    },
    {
        "id": "54c0ebd2.41c724",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "27527a91.1832fe",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "9f81efc6.f0f61",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "27527a91.1832fe",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "f3ed8071.65d64",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "27527a91.1832fe",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "e7689b16.221cb8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "27527a91.1832fe",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "eb52635.51b92a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "27527a91.1832fe",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "27b65cf1.24c8e4",
        "type": "ui_group",
        "name": "HLS demo",
        "tab": "787ed714.674938",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "787ed714.674938",
        "type": "ui_tab",
        "name": "Code",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d8efe9d4.d63eb8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "66b6f4fd.14bd8c",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "a30e7d89.ac8ea",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "66b6f4fd.14bd8c",
        "order": 3,
        "width": 7,
        "height": 1
    },
    {
        "id": "3d099e8e.936472",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "66b6f4fd.14bd8c",
        "order": 5,
        "width": 7,
        "height": 1
    },
    {
        "id": "bd9fe447.72f0a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "66b6f4fd.14bd8c",
        "order": 6,
        "width": 7,
        "height": 1
    },
    {
        "id": "e36c52c8.11648",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5ce5aba2.860bc4",
        "order": 1,
        "width": 7,
        "height": 1
    },
    {
        "id": "bb3943cb.da7ad",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5ce5aba2.860bc4",
        "order": 3,
        "width": 7,
        "height": 1
    },
    {
        "id": "d756e51e.305938",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5ce5aba2.860bc4",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "a98afb8c.214bb8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5ce5aba2.860bc4",
        "order": 5,
        "width": 7,
        "height": 1
    },
    {
        "id": "bc60b985.bccfe8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5ce5aba2.860bc4",
        "order": 7,
        "width": 7,
        "height": 1
    },
    {
        "id": "f24fd9cf.58d258",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5ce5aba2.860bc4",
        "order": 8,
        "width": 7,
        "height": 1
    },
    {
        "id": "e5912d57.97433",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5ce5aba2.860bc4",
        "order": 9,
        "width": 7,
        "height": 1
    },
    {
        "id": "36e17243.48389e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "2e0917fb.c43998",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "48a596a1.535928",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "de6a5971.af6c78",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "6cb5fbf5.8848e4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "cd66acff.a5476",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "90b8ce63.46da9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "1ba95e8d.d27c51",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "600dfdd6.d84364",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "cbe37f60.c3e06",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "23e0ad10.f91412",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "fb4cb626.a2d3f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "c6b55c3c.6ba16",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "f4111193.ddb97",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "4171c8e8.69c678",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "ec62f6b2.1887c8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "f553a6b0.8c48f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "568fbaa0.273cb4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "58fde7f6.ea5658",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "9a847b2a.51be58",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "8aff4891.826b58",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "af71ef7e.6637c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "e6f26987.12c698",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "efc5274c.9d4568",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "33435056.1a82b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 29,
        "width": 7,
        "height": 1
    },
    {
        "id": "b7a2f12f.c133d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "d3023caf.f4bcd",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 33,
        "width": 1,
        "height": 1
    },
    {
        "id": "a91a759b.cbfa78",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 34,
        "width": 1,
        "height": 1
    },
    {
        "id": "88c0abe6.28ff38",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 35,
        "width": 1,
        "height": 1
    },
    {
        "id": "31366222.a822be",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 36,
        "width": 1,
        "height": 1
    },
    {
        "id": "dc3aa6cb.bc2d48",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 37,
        "width": 1,
        "height": 1
    },
    {
        "id": "7ab7af2f.fb833",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 38,
        "width": 1,
        "height": 1
    },
    {
        "id": "d19beeee.5bccb",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4da78f89.fde46",
        "order": 39,
        "width": 1,
        "height": 1
    },
    {
        "id": "81f79856.3520c8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "66f95b6e.2ba5d4",
        "order": 2,
        "width": 5,
        "height": 1
    },
    {
        "id": "8eafeb2.0455318",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "66f95b6e.2ba5d4",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "411dcb90.c0b624",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "66f95b6e.2ba5d4",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "bf9cd3ed.17e77",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "66f95b6e.2ba5d4",
        "order": 5,
        "width": 5,
        "height": 1
    },
    {
        "id": "d6d25250.cf983",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "66f95b6e.2ba5d4",
        "order": 7,
        "width": 5,
        "height": 1
    },
    {
        "id": "ba6e83a6.85fe9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "66f95b6e.2ba5d4",
        "order": 8,
        "width": 5,
        "height": 1
    },
    {
        "id": "b1eed5ba.f27598",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "66f95b6e.2ba5d4",
        "order": 9,
        "width": 5,
        "height": 1
    },
    {
        "id": "e48371de.21c0e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "58c426a1.17a658",
        "order": 2,
        "width": 5,
        "height": 1
    },
    {
        "id": "5c930a14.a076e4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "58c426a1.17a658",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "c2c154f5.e024e8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "58c426a1.17a658",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "3df83348.164d3c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "58c426a1.17a658",
        "order": 5,
        "width": 5,
        "height": 1
    },
    {
        "id": "34b70797.e78858",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "58c426a1.17a658",
        "order": 7,
        "width": 5,
        "height": 1
    },
    {
        "id": "95a5333a.3e615",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "58c426a1.17a658",
        "order": 8,
        "width": 5,
        "height": 1
    },
    {
        "id": "bb309e34.8ac3c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "58c426a1.17a658",
        "order": 9,
        "width": 5,
        "height": 1
    },
    {
        "id": "73f20abb.5b6f94",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "720d2ed2.786f8",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "9e84783.4b86988",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "720d2ed2.786f8",
        "order": 6,
        "width": 7,
        "height": 1
    },
    {
        "id": "98679009.5c332",
        "type": "inject",
        "z": "8dd021bb.b57a4",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "brewster",
        "payload": "{\"sensordata\":{\"T1\":22.353,\"T2\":24.25,\"T3\":23.75}}",
        "payloadType": "json",
        "x": 170,
        "y": 480,
        "wires": [
            [
                "e3f7b09f.c05b88",
                "5c556b45.24c77c",
                "5645ba34.f8ed04"
            ]
        ]
    },
    {
        "id": "5645ba34.f8ed04",
        "type": "change",
        "z": "8dd021bb.b57a4",
        "name": "GetT1Data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.sensordata.T1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 680,
        "wires": [
            [
                "642e5062.3ebd48",
                "21d6c68f.c0e00a"
            ]
        ]
    },
    {
        "id": "e15415b1.7b4b2",
        "type": "function",
        "z": "8dd021bb.b57a4",
        "name": "FormatLogging",
        "func": "msg.payload = {\n    T1: msg.payload.sensordata.T1,\n    T2: msg.payload.sensordata.T2,\n    T3: msg.payload.sensordata.T3,\n    Pump: msg.payload.processdata.Pump,\n    Heating: msg.payload.processdata.Heater,\n    ProcessAuto: msg.payload.processdata.ProcessAuto,\n    ProcessStep: msg.payload.processdata.ProcessStep\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 620,
        "wires": [
            [
                "35ea7af.413ec06",
                "576c80e1.62114"
            ]
        ]
    },
    {
        "id": "35ea7af.413ec06",
        "type": "influxdb out",
        "z": "8dd021bb.b57a4",
        "influxdb": "d4d2aaa4.3f773",
        "name": "",
        "measurement": "brewster",
        "precision": "s",
        "retentionPolicy": "",
        "x": 830,
        "y": 580,
        "wires": []
    },
    {
        "id": "21d6c68f.c0e00a",
        "type": "ui_gauge",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "66b6f4fd.14bd8c",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "OPWARMVAT",
        "label": "C°",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "78",
        "x": 700,
        "y": 640,
        "wires": []
    },
    {
        "id": "642e5062.3ebd48",
        "type": "ui_chart",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "5ce5aba2.860bc4",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "OPWARMVAT",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 700,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "9783007.18a5e",
        "type": "ui_gauge",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "66b6f4fd.14bd8c",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "MAISCHVAT MOUT",
        "label": "C°",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "78",
        "x": 720,
        "y": 760,
        "wires": []
    },
    {
        "id": "ef7c798d.54aa2",
        "type": "ui_chart",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "5ce5aba2.860bc4",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "MAISCHVAT MOUT",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 720,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "e3f7b09f.c05b88",
        "type": "change",
        "z": "8dd021bb.b57a4",
        "name": "GetT2Data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.sensordata.T2",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 780,
        "wires": [
            [
                "9783007.18a5e",
                "ef7c798d.54aa2"
            ]
        ]
    },
    {
        "id": "601c801e.c00f08",
        "type": "ui_gauge",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "66b6f4fd.14bd8c",
        "order": 7,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "MAISCHVAT WORT",
        "label": "C°",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "78",
        "x": 720,
        "y": 860,
        "wires": []
    },
    {
        "id": "ccff8adf.e5da",
        "type": "ui_chart",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "5ce5aba2.860bc4",
        "order": 10,
        "width": 0,
        "height": 0,
        "label": "MAISCHVAT WORT",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 720,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "5c556b45.24c77c",
        "type": "change",
        "z": "8dd021bb.b57a4",
        "name": "GetT3Data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.sensordata.T3",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 880,
        "wires": [
            [
                "601c801e.c00f08",
                "ccff8adf.e5da"
            ]
        ]
    },
    {
        "id": "10e46035.d01d08",
        "type": "ui_switch",
        "z": "8dd021bb.b57a4",
        "name": "PumpSwitch",
        "label": "Pump",
        "tooltip": "",
        "group": "4da78f89.fde46",
        "order": 19,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1290,
        "y": 980,
        "wires": [
            [
                "f59f7451.1f0558"
            ]
        ]
    },
    {
        "id": "5664e3de.fc6a74",
        "type": "change",
        "z": "8dd021bb.b57a4",
        "name": "GetPumpData",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$boolean(payload.processdata.Pump)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 980,
        "wires": [
            [
                "10e46035.d01d08"
            ]
        ]
    },
    {
        "id": "81ee9739.d9875",
        "type": "change",
        "z": "8dd021bb.b57a4",
        "name": "GetHeaterData",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$boolean(payload.processdata.Heater)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 1040,
        "wires": [
            [
                "120f51d7.002a56"
            ]
        ]
    },
    {
        "id": "120f51d7.002a56",
        "type": "ui_switch",
        "z": "8dd021bb.b57a4",
        "name": "HeaterSwitch",
        "label": "Heater",
        "tooltip": "",
        "group": "4da78f89.fde46",
        "order": 30,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1290,
        "y": 1040,
        "wires": [
            [
                "a706b8e9.8d2298"
            ]
        ]
    },
    {
        "id": "8afbccf.b0274b",
        "type": "serial in",
        "z": "8dd021bb.b57a4",
        "name": "USB_COM",
        "serial": "92c7af30.17e9a8",
        "x": 80,
        "y": 880,
        "wires": [
            [
                "692d9c94.58984c"
            ]
        ]
    },
    {
        "id": "2f56bb2b.d5f3c4",
        "type": "inject",
        "z": "8dd021bb.b57a4",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"processdata\":{\"Pump\":0,\"Heater\":0}}",
        "payloadType": "json",
        "x": 150,
        "y": 1020,
        "wires": [
            [
                "5664e3de.fc6a74",
                "81ee9739.d9875"
            ]
        ]
    },
    {
        "id": "692d9c94.58984c",
        "type": "json",
        "z": "8dd021bb.b57a4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 210,
        "y": 880,
        "wires": [
            [
                "5645ba34.f8ed04",
                "e3f7b09f.c05b88",
                "5c556b45.24c77c",
                "e15415b1.7b4b2",
                "5664e3de.fc6a74",
                "81ee9739.d9875",
                "a55c7441.94ff9"
            ]
        ]
    },
    {
        "id": "a55c7441.94ff9",
        "type": "change",
        "z": "8dd021bb.b57a4",
        "name": "ValueMapper",
        "rules": [
            {
                "t": "change",
                "p": "payload.processdata.ProcessAuto",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Manual mode",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.processdata.ProcessAuto",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Automatic mode",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.processdata.ProcessStep",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Idle Step",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.processdata.ProcessStep",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Step 1",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.processdata.ProcessStep",
                "pt": "msg",
                "from": "2",
                "fromt": "num",
                "to": "Step 2",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.processdata.ProcessStep",
                "pt": "msg",
                "from": "3",
                "fromt": "num",
                "to": "Step 3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1140,
        "wires": [
            [
                "9331aa30.41437",
                "ce88b406.3d5e38",
                "8239c85a.4ecf",
                "b20cdf57.acbe48"
            ]
        ]
    },
    {
        "id": "ce88b406.3d5e38",
        "type": "ui_text",
        "z": "8dd021bb.b57a4",
        "group": "35700b71.03d264",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "ProcessStep",
        "label": "ProcessStep:",
        "format": "{{msg.payload.processdata.ProcessStep}}",
        "layout": "col-center",
        "x": 570,
        "y": 1260,
        "wires": []
    },
    {
        "id": "9331aa30.41437",
        "type": "ui_text",
        "z": "8dd021bb.b57a4",
        "group": "35700b71.03d264",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "ProcessAuto",
        "label": "ProcessMode:",
        "format": "{{msg.payload.processdata.ProcessAuto}}",
        "layout": "col-center",
        "x": 590,
        "y": 1140,
        "wires": []
    },
    {
        "id": "c0e5439e.5440b8",
        "type": "function",
        "z": "8dd021bb.b57a4",
        "name": "ProcessAutoString",
        "func": "processAuto = msg.payload.processdata.ProcessAuto;\nmsg.payload = processAuto;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 910,
        "y": 1100,
        "wires": [
            [
                "5d0a925.e621f6c"
            ]
        ]
    },
    {
        "id": "f0c8f5ce.86f6b8",
        "type": "function",
        "z": "8dd021bb.b57a4",
        "name": "ProcessStepString",
        "func": "processStep = msg.payload.processdata.ProcessStep;\nmsg.payload = processStep;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 1200,
        "wires": [
            [
                "f9ff7905.c1d3e8"
            ]
        ]
    },
    {
        "id": "8239c85a.4ecf",
        "type": "rbe",
        "z": "8dd021bb.b57a4",
        "name": "ChangeDetectProcessMode",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.processdata.ProcessAuto",
        "x": 640,
        "y": 1100,
        "wires": [
            [
                "c0e5439e.5440b8"
            ]
        ]
    },
    {
        "id": "b20cdf57.acbe48",
        "type": "rbe",
        "z": "8dd021bb.b57a4",
        "name": "ChangeDetectProcessStep",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.processdata.ProcessStep",
        "x": 640,
        "y": 1200,
        "wires": [
            [
                "f0c8f5ce.86f6b8"
            ]
        ]
    },
    {
        "id": "5d0a925.e621f6c",
        "type": "ui_audio",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "66b6f4fd.14bd8c",
        "voice": "Google UK English Male",
        "always": "",
        "x": 1080,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f9ff7905.c1d3e8",
        "type": "ui_audio",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "66b6f4fd.14bd8c",
        "voice": "Google UK English Male",
        "always": "",
        "x": 1060,
        "y": 1200,
        "wires": []
    },
    {
        "id": "19a2bb91.9d293c",
        "type": "inject",
        "z": "8dd021bb.b57a4",
        "name": "",
        "props": [
            {
                "p": "recipe",
                "v": "{\"doel\":\"\",\"ingredient_params\":{\"hop\":\"100g tarzannekes\",\"output\":\"80L yield\"},\"steps\":[{\"name\":\"Ruststap\",\"stepconditions\":{},\"outputs\":{\"pump\":0,\"heater\":0,\"valve\":0}},{\"name\":\"Vulstap\",\"stepconditions\":{\"time\":2},\"outputs\":{\"pump\":1,\"heater\":0,\"valve\":1}},{\"name\":\"Opwarmfase\",\"stepconditions\":{\"T1\":30,\"time\":3},\"outputs\":{\"pump\":1,\"heater\":1,\"valve\":1}},{\"name\":\"Maischfase - step 1\",\"stepconditions\":{\"T1\":40,\"time\":4},\"outputs\":{\"pump\":1,\"heater\":1,\"valve\":1}},{\"name\":\"Maischfase - step 2\",\"stepconditions\":{\"T1\":50,\"time\":5},\"outputs\":{\"pump\":1,\"heater\":1,\"valve\":1}}]}",
                "vt": "msg"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 1490,
        "y": 560,
        "wires": [
            [
                "f7968f84.15d858"
            ]
        ]
    },
    {
        "id": "4fad69.f62fba98",
        "type": "function",
        "z": "8dd021bb.b57a4",
        "name": "RecipeProcessor",
        "func": "var stepcondition = false;\nvar output = {};\n\n\n\n\n// check if stepconditions are met for proceeding to next step:\nif (msg.process.currentstep < msg.process.totalsteps -1 && !msg.process.finished){\n    stepcondition = true;\n}\nelse {\n    stepcondition = false;\n}\n\n// if last stap is not reached and process is not yet finished: go to next step\nif (stepcondition){\n    msg.process.currentstep++;\n    step = msg.process.currentstep;\n    \n    output = msg.recipe.steps[step].outputs;\n    msg.test = output;//node.send([null,null,test]);\n /*   for (var i = 0; i < msg.recipe.steps[step].outputs.length; i++) {\n        node.send([null,null,msg.recipe.steps[step].outputs[i]]);\n    }*/\n    \n  /*  node.send([null,output,null] /*2de output gaat naar de UI*/*/\n    \n    \n    stepname = { \"stepname\" : msg.recipe.steps[step].name} /*stepname is het de key, recipe.STEPS[STEP].doel */\n    if (msg.recipe.steps[step].stepconditions.hasOwnProperty(\"time\")){\n        msg.delay = msg.recipe.steps[step].stepconditions.time * 1000; //conversion to milliseconds\n    }\n    else{\n        msg.delay = 0;\n    }\n    node.send([msg,stepname,msg]);\n}\nelse{\n    msg.process.finished = true;\n    msg.process.currentstep = 0;\n    msg.delay = 0;\n    node.send([msg,stepname,null]);\n}\nreturn null;\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n",
        "outputs": 3,
        "noerr": 1,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 560,
        "wires": [
            [
                "6417aee.d17c65",
                "4050d57e.fc288c"
            ],
            [
                "35e5f233.b0a366",
                "a0fdc3dd.47972"
            ],
            [
                "f366f063.e39478"
            ]
        ]
    },
    {
        "id": "4050d57e.fc288c",
        "type": "debug",
        "z": "8dd021bb.b57a4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 300,
        "wires": []
    },
    {
        "id": "6417aee.d17c65",
        "type": "ui_text",
        "z": "8dd021bb.b57a4",
        "group": "39d3a6b0.0f5642",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "RecipeName",
        "label": "text",
        "format": "{{msg.recipe.name}}",
        "layout": "row-spread",
        "x": 2410,
        "y": 340,
        "wires": []
    },
    {
        "id": "f366f063.e39478",
        "type": "delay",
        "z": "8dd021bb.b57a4",
        "name": "steptimer",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 1940,
        "y": 680,
        "wires": [
            [
                "4fad69.f62fba98"
            ]
        ]
    },
    {
        "id": "f7968f84.15d858",
        "type": "function",
        "z": "8dd021bb.b57a4",
        "name": "InitializeProcess",
        "func": "var allsteps = {};\nallsteps = Object.keys(msg.recipe.steps).length;\nmsg.process = {currentstep : 0, totalsteps : allsteps, finished : false}\nnode.send(msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 560,
        "wires": [
            [
                "4fad69.f62fba98"
            ]
        ]
    },
    {
        "id": "35e5f233.b0a366",
        "type": "ui_text",
        "z": "8dd021bb.b57a4",
        "group": "39d3a6b0.0f5642",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "StepName",
        "format": "{{stepname}}",
        "layout": "row-spread",
        "x": 2410,
        "y": 380,
        "wires": []
    },
    {
        "id": "9e1dc1da.8b0db",
        "type": "ui_gauge",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "66f95b6e.2ba5d4",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "KRAAN 1",
        "label": "units",
        "format": "{{msg.kraan1}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1540,
        "y": 1380,
        "wires": []
    },
    {
        "id": "22f02ae1.775f26",
        "type": "ui_gauge",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "66f95b6e.2ba5d4",
        "order": 6,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "KRAAN 2",
        "label": "units",
        "format": "{{msg.kraan2}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "0",
        "seg2": "",
        "x": 1540,
        "y": 1420,
        "wires": []
    },
    {
        "id": "7b400ebf.bb23",
        "type": "ui_gauge",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "66f95b6e.2ba5d4",
        "order": 10,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "KRAAN 3",
        "label": "units",
        "format": "{{msg.kraan3}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "0",
        "seg2": "",
        "x": 1540,
        "y": 1460,
        "wires": []
    },
    {
        "id": "2fe72f95.a0758",
        "type": "ui_gauge",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "58c426a1.17a658",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "KRAAN 4",
        "label": "units",
        "format": "{{msg.kraan4}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "0",
        "seg2": "",
        "x": 1540,
        "y": 1500,
        "wires": []
    },
    {
        "id": "10f2297a.5619e7",
        "type": "ui_gauge",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "4da78f89.fde46",
        "order": 2,
        "width": 5,
        "height": 4,
        "gtype": "donut",
        "title": "GASVUUR OPWARM",
        "label": "STAND",
        "format": "{{msg.vuur}}",
        "min": "0",
        "max": "2",
        "colors": [
            "#00b500",
            "#ffa200",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "1",
        "x": 1680,
        "y": 1080,
        "wires": []
    },
    {
        "id": "9082a850.6be0f8",
        "type": "ui_button",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "720d2ed2.786f8",
        "order": 1,
        "width": 7,
        "height": 3,
        "passthru": false,
        "label": "NEXT",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1890,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "1dce7d56.cc7553",
        "type": "ui_button",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "720d2ed2.786f8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "BACK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1890,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "fdf1e2e1.7cf0d",
        "type": "ui_button",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "720d2ed2.786f8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "WAIT",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1890,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "dc2e2678.4765a8",
        "type": "ui_text",
        "z": "8dd021bb.b57a4",
        "group": "720d2ed2.786f8",
        "order": 7,
        "width": 7,
        "height": 6,
        "name": "",
        "label": "",
        "format": "{{msg.tekst2}}",
        "layout": "col-center",
        "x": 1530,
        "y": 1260,
        "wires": []
    },
    {
        "id": "bfb297d3.6087e8",
        "type": "ui_gauge",
        "z": "8dd021bb.b57a4",
        "name": "CPU TEMP",
        "group": "58c426a1.17a658",
        "order": 10,
        "width": 5,
        "height": 4,
        "gtype": "gage",
        "title": "RPI CPU TEMP",
        "label": "C°",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "70",
        "x": 1130,
        "y": 1380,
        "wires": []
    },
    {
        "id": "ae5a28ec.a9a238",
        "type": "exec",
        "z": "8dd021bb.b57a4",
        "command": "vcgencmd measure_temp",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Raspberry CPU Temperature",
        "x": 480,
        "y": 1400,
        "wires": [
            [
                "c23a69a7.e38218"
            ],
            [],
            []
        ]
    },
    {
        "id": "c23a69a7.e38218",
        "type": "function",
        "z": "8dd021bb.b57a4",
        "name": "Extract CPU Temp",
        "func": "const re = /^temp=(.*)'C$/gm;\nmsg.payload = Number(msg.payload.replace(re, '$1'));\n// msg.topic= msg.payload.replace(re, '$1');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 770,
        "y": 1380,
        "wires": [
            [
                "bfb297d3.6087e8",
                "72a75164.ba793"
            ]
        ]
    },
    {
        "id": "28bc8de.d4f3572",
        "type": "inject",
        "z": "8dd021bb.b57a4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 1400,
        "wires": [
            [
                "ae5a28ec.a9a238"
            ]
        ]
    },
    {
        "id": "72a75164.ba793",
        "type": "ui_chart",
        "z": "8dd021bb.b57a4",
        "d": true,
        "name": "",
        "group": "58c426a1.17a658",
        "order": 11,
        "width": 0,
        "height": 0,
        "label": "RPI CPU TEMP",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1140,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "576c80e1.62114",
        "type": "change",
        "z": "8dd021bb.b57a4",
        "name": "STORE OBJ IN GLOBAL",
        "rules": [
            {
                "t": "set",
                "p": "timestamp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "f84d207f.982da",
        "type": "ui_gauge",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "4da78f89.fde46",
        "order": 21,
        "width": 5,
        "height": 4,
        "gtype": "donut",
        "title": "POMP",
        "label": "STAND",
        "format": "{{msg.pomp}}",
        "min": "0",
        "max": "1",
        "colors": [
            "#00b500",
            "#ffa200",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "1",
        "x": 1690,
        "y": 980,
        "wires": []
    },
    {
        "id": "294424b.f8a2adc",
        "type": "ui_gauge",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "4da78f89.fde46",
        "order": 32,
        "width": 5,
        "height": 4,
        "gtype": "donut",
        "title": "WEERSTAND",
        "label": "STAND",
        "format": "{{msg.weerstand}}",
        "min": "0",
        "max": "1",
        "colors": [
            "#00b500",
            "#ffa200",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "1",
        "x": 1660,
        "y": 1040,
        "wires": []
    },
    {
        "id": "f59f7451.1f0558",
        "type": "change",
        "z": "8dd021bb.b57a4",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 980,
        "wires": [
            [
                "f84d207f.982da"
            ]
        ]
    },
    {
        "id": "a706b8e9.8d2298",
        "type": "change",
        "z": "8dd021bb.b57a4",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 1040,
        "wires": [
            [
                "294424b.f8a2adc"
            ]
        ]
    },
    {
        "id": "a854ff4f.772aa",
        "type": "ui_gauge",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "58c426a1.17a658",
        "order": 6,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "KRAAN 5",
        "label": "units",
        "format": "{{msg.kraan5}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "0",
        "seg2": "",
        "x": 1540,
        "y": 1540,
        "wires": []
    },
    {
        "id": "a546d63b.d77db8",
        "type": "rpi-gpio in",
        "z": "7c983f7.38453c",
        "name": "OPWARMVAT TEMP",
        "pin": "tri",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "x": 480,
        "y": 200,
        "wires": [
            [
                "7ef183b9.132c7c"
            ]
        ]
    },
    {
        "id": "7809d3b5.95a44c",
        "type": "rpi-gpio in",
        "z": "7c983f7.38453c",
        "name": "MAISCHVAT MOUT TEMP",
        "pin": "tri",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "x": 490,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "24bea8ea.e9b618",
        "type": "rpi-gpio in",
        "z": "7c983f7.38453c",
        "name": "MAISCHVAT WORT TEMP",
        "pin": "tri",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "x": 490,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "adc38941.ecda08",
        "type": "rpi-gpio in",
        "z": "7c983f7.38453c",
        "name": "POMP SWITCH",
        "pin": "tri",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "x": 460,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "466575bb.60134c",
        "type": "rpi-gpio in",
        "z": "7c983f7.38453c",
        "name": "WEERSTAND SWITCH",
        "pin": "tri",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "x": 480,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "7a43baed.d2c574",
        "type": "rpi-gpio in",
        "z": "7c983f7.38453c",
        "name": "RODE KNOP",
        "pin": "tri",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "x": 450,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "7ef183b9.132c7c",
        "type": "rpi-ds18b20",
        "z": "7c983f7.38453c",
        "topic": "",
        "array": true,
        "name": "",
        "x": 730,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "24de1055.8ccd4",
        "type": "ds18b20",
        "z": "7c983f7.38453c",
        "name": "",
        "sensorid": "",
        "timer": "0.2",
        "x": 470,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "291ef78b.60f2f8",
        "type": "http in",
        "z": "8dd021bb.b57a4",
        "name": "RECEPT_OPSLAAN",
        "url": "/receptIn",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 200,
        "wires": [
            [
                "5cdd0b1f.016704"
            ]
        ]
    },
    {
        "id": "5cdd0b1f.016704",
        "type": "file",
        "z": "8dd021bb.b57a4",
        "name": "",
        "filename": "pi5/recepten.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 590,
        "y": 200,
        "wires": [
            [
                "3dacaab1.e6bd16"
            ]
        ]
    },
    {
        "id": "6e2aa957.87d6b8",
        "type": "http in",
        "z": "8dd021bb.b57a4",
        "name": "RECEPT UIT",
        "url": "/receptUit",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "ba0ab258.95f74"
            ]
        ]
    },
    {
        "id": "9e55f7d5.9b8198",
        "type": "http response",
        "z": "8dd021bb.b57a4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1530,
        "y": 120,
        "wires": []
    },
    {
        "id": "ce20cc87.9c7ed",
        "type": "http in",
        "z": "8dd021bb.b57a4",
        "name": "",
        "url": "/users",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 40,
        "wires": [
            [
                "9712a18d.e0407"
            ]
        ]
    },
    {
        "id": "24c3b3f3.21843c",
        "type": "http response",
        "z": "8dd021bb.b57a4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1110,
        "y": 40,
        "wires": []
    },
    {
        "id": "756a933f.9dc7cc",
        "type": "change",
        "z": "8dd021bb.b57a4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 40,
        "wires": [
            [
                "24c3b3f3.21843c"
            ]
        ]
    },
    {
        "id": "9712a18d.e0407",
        "type": "change",
        "z": "8dd021bb.b57a4",
        "name": "GET OBJ FROM GLOBAL",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "timestamp",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 40,
        "wires": [
            [
                "756a933f.9dc7cc"
            ]
        ]
    },
    {
        "id": "3dacaab1.e6bd16",
        "type": "http response",
        "z": "8dd021bb.b57a4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "ba0ab258.95f74",
        "type": "file in",
        "z": "8dd021bb.b57a4",
        "name": "",
        "filename": "pi5/recepten.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "x": 450,
        "y": 120,
        "wires": [
            [
                "a44867c2.53cc98"
            ]
        ]
    },
    {
        "id": "a44867c2.53cc98",
        "type": "split",
        "z": "8dd021bb.b57a4",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 650,
        "y": 120,
        "wires": [
            [
                "e16bab11.a05348"
            ]
        ]
    },
    {
        "id": "16354f6.66272b1",
        "type": "join",
        "z": "8dd021bb.b57a4",
        "name": "make recept array",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1110,
        "y": 120,
        "wires": [
            [
                "85b424de.b76658"
            ]
        ]
    },
    {
        "id": "e16bab11.a05348",
        "type": "json",
        "z": "8dd021bb.b57a4",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 890,
        "y": 100,
        "wires": [
            [
                "16354f6.66272b1"
            ]
        ]
    },
    {
        "id": "85b424de.b76658",
        "type": "json",
        "z": "8dd021bb.b57a4",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1350,
        "y": 120,
        "wires": [
            [
                "9e55f7d5.9b8198"
            ]
        ]
    },
    {
        "id": "4298cece.9fcee",
        "type": "http in",
        "z": "8dd021bb.b57a4",
        "name": "RECEPT KEUZE",
        "url": "/receptKeuze",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 320,
        "wires": [
            [
                "1df8b317.fb0f4d",
                "f5f3479d.673db8"
            ]
        ]
    },
    {
        "id": "1df8b317.fb0f4d",
        "type": "http response",
        "z": "8dd021bb.b57a4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 490,
        "y": 320,
        "wires": []
    },
    {
        "id": "fd369cf8.a48d1",
        "type": "function",
        "z": "8dd021bb.b57a4",
        "d": true,
        "name": "Make recipeObject",
        "func": "//definieer object//\nmsg.recipe={};\nmsg.recipe.steps={};\nmsg.recipe.control={};\nmsg.recipe.control.tekst={};\nmsg.recipe.output={};\n\n//maak big button//\nmsg.recipe.control.bigButton = false;\n\n//initialise kranen en andere output//\nmsg.recipe.output.kraan1 = 0; //(0of1)\nmsg.recipe.output.kraan2 = 0; //(0of1)\nmsg.recipe.output.kraan3 = 0; //(0of1)\nmsg.recipe.output.kraan4 = 0; //(0of1)\nmsg.recipe.output.kraan5 = 0; //(0of1)\nmsg.recipe.output.vuur = 1;   //(0,1,2)\nmsg.recipe.output.weerstand = 1; //(0of1)\nmsg.recipe.output.pomp = 1; //(0of1)\nmsg.recipe.output.tekst1 = 'test';\nmsg.recipe.output.tekst2 = 'hello';\nmsg.recipe.output.audio = '';\nmsg.recipe.output.Timer = '';\n\n//definieer stap 1 vulling//\nconst standaardOpwarmVulling = 50;\nconst standaardOpwarmingGraden = 25;\nconst maischWater = msg.payload.maischWater;\nconst spoelWater = msg.payload.spoelWater;\nconst opwarmWaterLiter = spoelWater + standaardOpwarmVulling;\nconst opwarmWaterGraden = standaardOpwarmingGraden;\nconst moutKlaarmakenArray = msg.payload.mouts;\nconst hopKlaarmakenArray = msg.payload.hops;\n//definieer teksten//\nmsg.recipe.control.tekst.moutTekst = moutKlaarmakenArray.map((mout,i)=> `Schroot soort ${i+1} van ${moutKlaarmakenArray.length}: ${mout.soort} waarvan ${mout.gewicht} kilo.\n`).join('');\nmsg.recipe.control.tekst.hopTekst = hopKlaarmakenArray.map((hop,i)=> `Vul hopsok ${i+1} van ${hopKlaarmakenArray.length}: ${hop.soort}\n`).join('');\n\n\n\nmsg.recipe.control.aantalHop = hopKlaarmakenArray.length;\nmsg.recipe.control.aantalMout = moutKlaarmakenArray.length;\n\nmsg.recipe.steps.step1 = {maischWater, spoelWater, opwarmWaterLiter, opwarmWaterGraden};\n\n//definieer voorwaarde start van step2 = opwarming tot eerste temp//\nconst startTemp = msg.payload.cycli[0];\n\nmsg.recipe.steps.step2 = {startTemp};\n \n// definieer alle cycli (aantal?)//\nconst aantalCycli = msg.payload.cycli.length;\nmsg.recipe.control.aantalCycli = aantalCycli;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 380,
        "wires": [
            [
                "bd38e001.29508",
                "84e5a6bf.605238"
            ]
        ]
    },
    {
        "id": "bd38e001.29508",
        "type": "function",
        "z": "8dd021bb.b57a4",
        "d": true,
        "name": "step 1: Vullen/opwarmen",
        "func": "\n\n\n\nlet timer = setInterval( function checkConditionsStep1(){\n    if(false){\n    msg.recipe.output.kraan1=1;\n    msg.recipe.output.vuur=0;\n    msg.recipe.output.weerstand=0;\n    msg.recipe.output.tekst=0;\n    msg.recipe.output.tekst=0;\n    node.send([msg,msg.recipe.output])}\n    \n},1000);\n\n/*return [msg,msg.recipe.output];*/",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 480,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9b0aa7eb.a27e28",
        "type": "link in",
        "z": "8dd021bb.b57a4",
        "name": "TO OUTPUT",
        "links": [
            "a0fdc3dd.47972"
        ],
        "x": 1215,
        "y": 1220,
        "wires": [
            [
                "9e1dc1da.8b0db",
                "22f02ae1.775f26",
                "7b400ebf.bb23",
                "2fe72f95.a0758",
                "a854ff4f.772aa",
                "10f2297a.5619e7",
                "294424b.f8a2adc",
                "f84d207f.982da",
                "3b253e68.ab1792",
                "dc2e2678.4765a8",
                "a08909c1.936f48"
            ]
        ]
    },
    {
        "id": "a0fdc3dd.47972",
        "type": "link out",
        "z": "8dd021bb.b57a4",
        "name": "TO OUTPUT",
        "links": [
            "9b0aa7eb.a27e28"
        ],
        "x": 2210,
        "y": 560,
        "wires": [],
        "l": true
    },
    {
        "id": "3b253e68.ab1792",
        "type": "ui_text",
        "z": "8dd021bb.b57a4",
        "group": "720d2ed2.786f8",
        "order": 5,
        "width": 7,
        "height": 6,
        "name": "",
        "label": "",
        "format": "{{msg.tekst1}}",
        "layout": "col-center",
        "x": 1530,
        "y": 1200,
        "wires": []
    },
    {
        "id": "84e5a6bf.605238",
        "type": "function",
        "z": "8dd021bb.b57a4",
        "d": true,
        "name": "",
        "func": "\n\n\nasync function promisify(msg){\n    try{\n        await (msg)=>{if(global.push===true){return msg}};\n        await function(msg){ node.send(msg.recipe.output)};\n    }catch(err){\n        \n    }\n}\n\npromisify();",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "53b73bc.78f9cc4",
        "type": "inject",
        "z": "ba97d22d.3df94",
        "name": "Push",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 250,
        "y": 220,
        "wires": [
            [
                "d749ce99.e49e4"
            ]
        ]
    },
    {
        "id": "180cf874.13daa8",
        "type": "inject",
        "z": "ba97d22d.3df94",
        "name": "Release",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 240,
        "y": 260,
        "wires": [
            [
                "d749ce99.e49e4"
            ]
        ]
    },
    {
        "id": "d749ce99.e49e4",
        "type": "function",
        "z": "ba97d22d.3df94",
        "name": "Press/Hold",
        "func": "var pending = context.get(\"pending\");\nif(msg.payload === 0){\n    if(pending){\n        context.set(\"pending\", false);\n    }else{\n        context.set(\"pending\",true);\n        msg.command = \"hold\";\n        return [msg,null];\n    }\n}else if (msg.payload ===1){\n    if(pending){\n        msg.reset = true;\n        msg.command = \"push\";\n        context.set(\"pending\",false);\n        return [msg,msg];\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\ncontext.set(\"pending\", false)",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 240,
        "wires": [
            [
                "ef66a17e.ec72"
            ],
            [
                "2a6988a6.ef4c48"
            ]
        ],
        "outputLabels": [
            "Hold",
            "Push"
        ]
    },
    {
        "id": "ef66a17e.ec72",
        "type": "delay",
        "z": "ba97d22d.3df94",
        "name": "",
        "pauseType": "delay",
        "timeout": "1200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 580,
        "y": 200,
        "wires": [
            [
                "2a6988a6.ef4c48",
                "d749ce99.e49e4"
            ]
        ]
    },
    {
        "id": "2a6988a6.ef4c48",
        "type": "debug",
        "z": "ba97d22d.3df94",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 240,
        "wires": []
    },
    {
        "id": "e94468b6.358e18",
        "type": "debug",
        "z": "ba97d22d.3df94",
        "name": "Clicked",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 380,
        "wires": []
    },
    {
        "id": "4bc6d6f0.115498",
        "type": "inject",
        "z": "ba97d22d.3df94",
        "name": "Inject 0",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ZERO",
        "payload": "0",
        "payloadType": "num",
        "x": 210,
        "y": 440,
        "wires": [
            [
                "ecd423af.746cd"
            ]
        ]
    },
    {
        "id": "9130e7a8.87df08",
        "type": "inject",
        "z": "ba97d22d.3df94",
        "name": "Inject 1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ONE",
        "payload": "1",
        "payloadType": "num",
        "x": 210,
        "y": 500,
        "wires": [
            [
                "ecd423af.746cd"
            ]
        ]
    },
    {
        "id": "3ac673fa.12ef9c",
        "type": "ui_chart",
        "z": "ba97d22d.3df94",
        "name": "Poor man oscilloscope",
        "group": "27b65cf1.24c8e4",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Poor man oscilloscope",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "2",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 600,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "ecd423af.746cd",
        "type": "switch",
        "z": "ba97d22d.3df94",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "2",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 440,
        "wires": [
            [
                "c6658632.447978"
            ],
            [
                "3ac673fa.12ef9c"
            ]
        ]
    },
    {
        "id": "b0bd0d59.bc7cf",
        "type": "debug",
        "z": "ba97d22d.3df94",
        "name": "Double clicked",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 460,
        "wires": []
    },
    {
        "id": "625d6be5.811694",
        "type": "debug",
        "z": "ba97d22d.3df94",
        "name": "Pressed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 420,
        "wires": []
    },
    {
        "id": "c6658632.447978",
        "type": "button-events",
        "z": "ba97d22d.3df94",
        "name": "",
        "outputs": 3,
        "inputField": "payload",
        "inputFieldType": "msg",
        "outputField": "payload",
        "outputFieldType": "msg",
        "downValue": "0",
        "downValueType": "num",
        "upValue": "1",
        "upValueType": "num",
        "idleValue": "1",
        "clickedInterval": "2000",
        "pressedInterval": "5000",
        "debounceInterval": "200",
        "events": [
            {
                "type": "clicked"
            },
            {
                "type": "pressed"
            },
            {
                "type": "double_clicked"
            }
        ],
        "x": 580,
        "y": 400,
        "wires": [
            [
                "e94468b6.358e18"
            ],
            [
                "625d6be5.811694"
            ],
            [
                "b0bd0d59.bc7cf"
            ]
        ]
    },
    {
        "id": "18fa45e.dd993ba",
        "type": "debug",
        "z": "ba97d22d.3df94",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1390,
        "y": 680,
        "wires": []
    },
    {
        "id": "d649825e.ab13d",
        "type": "inject",
        "z": "ba97d22d.3df94",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 990,
        "y": 600,
        "wires": [
            [
                "3197e4b9.85addc"
            ]
        ]
    },
    {
        "id": "3197e4b9.85addc",
        "type": "func-exec",
        "z": "ba97d22d.3df94",
        "name": "",
        "func": "var exec = child_process.exec('ls -la', (error, stdout, stderr) => { \n    if (error) { \n    console.error(`exec error: ${error}`); \n    return; \n    } \n    console.log(`stdout: ${stdout}`); \n    console.log(`stderr: ${stderr}`); \n    msg.payload = stdout;\n    callback(msg);\n}); ",
        "outputs": 1,
        "noerr": 0,
        "x": 1190,
        "y": 640,
        "wires": [
            [
                "18fa45e.dd993ba"
            ]
        ]
    },
    {
        "id": "2be085f6.2cb3ca",
        "type": "ui_button",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "35700b71.03d264",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "push",
        "topicType": "global",
        "x": 1030,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "b0c37f7f.d2ffb",
        "type": "json",
        "z": "8dd021bb.b57a4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1330,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e25c01c3.13ce7",
        "type": "template",
        "z": "8dd021bb.b57a4",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "[{{payload}}]",
        "output": "str",
        "x": 1480,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "dc359593.7f0648",
        "type": "change",
        "z": "8dd021bb.b57a4",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\\n",
                "fromt": "str",
                "to": ",",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 340,
        "wires": [
            [
                "e25c01c3.13ce7"
            ]
        ]
    },
    {
        "id": "2c799cc9.472c54",
        "type": "function",
        "z": "8dd021bb.b57a4",
        "d": true,
        "name": "RecipeProcessor",
        "func": "var stepcondition = false;\nvar output = {};\n\n\n\n\n// check if stepconditions are met for proceeding to next step:\nif (msg.process.currentstep < msg.process.totalsteps -1 && !msg.process.finished){\n    stepcondition = true;\n}\nelse {\n    stepcondition = false;\n}\n\n// if last stap is not reached and process is not yet finished: go to next step\nif (stepcondition){\n    msg.process.currentstep++;\n    step = msg.process.currentstep;\n    \n    output = msg.recipe.steps[step].outputs;\n    msg.test = output;//node.send([null,null,test]);\n /*   for (var i = 0; i < msg.recipe.steps[step].outputs.length; i++) {\n        node.send([null,null,msg.recipe.steps[step].outputs[i]]);\n    }*/\n    \n  /*  node.send([null,output,null] /*2de output gaat naar de UI*/*/\n    \n    \n    stepname = { \"stepname\" : msg.recipe.steps[step].doel} /*stepname is het de key, recipe.STEPS[STEP].doel */\n    if (msg.recipe.steps[step].stepconditions.hasOwnProperty(\"time\")){\n        msg.delay = msg.recipe.steps[step].stepconditions.time * 1000; //conversion to milliseconds\n    }\n    else{\n        msg.delay = 0;\n    }\n    node.send([msg,stepname,msg]);\n}\nelse{\n    msg.process.finished = true;\n    msg.process.currentstep = 0;\n    msg.delay = 0;\n    node.send([msg,stepname,null]);\n}\nreturn null;\n\n\n\n/*\nconst receptObject =  {\n    payload: {\n                naam:\"effort fort\",\n                type:\"tripel\",\n                maischWater:50,\n                spoelWater:20,\n                kookTijd:80,\n                hops:[{soort:\"Saaz\",alfa:3.9,gewicht:150,in:5,uit:80},{soort:\"Saaz\",alfa:3.9,gewicht:50,in:15,uit:80},{soort:\"Target\",alfa:12.7,gewicht:100,in:75,uit:80},{soort:\"Aramis\",alfa:6.3,gewicht:60,in:75,uit:80}],\n                mouts:[{soort:\"ECB3\",gewicht:13.85},{soort:\"gerst\",gewicht:1}],\n                cycli:[{temp:62,\"tijd\":45},{temp:72,tijd:20},{temp:78,tijd:5}] \n            },\n    control: {\n                standaardMinimumOpwarmTank = 20,\n                standaardVolumeOpwarmtank = 70,\n                aantalMout: this.payload.mouts.length,\n                aantalHops: this.payload.hops.length,\n                aantalCycli: this.payload.cycli.length,\n                vulOpwarmTank1: this.payload.maischWater + standaardMinimumOpwarmTank,\n                vulOpwarmTank2: this.payload.maischWater\n                moutTekst: this.payload.mouts.foreach((mout,i)=> `mout ${i}: ${mout.soort} gewicht: ${mout.gewicht}`).join('\\n'),\n                hopTekst: this.payload.hops.foreach((hop,i)=> `hop ${i}: ${hop.soort} gewicht: ${hop.gewicht}`).join('\\n'),\n                zuursel: \"\"\n                    \n                    \n                   \n        \n    },\n    steps:[\n    {\n        doel:'vul opwarmtank',\n        boodschap:[`Vul de opwarmTank met ${this.control.vulOpwarmTank1}L water`,``], \n        outputs:\n            {kraan1: 0, \n            kraan2: 0, \n            kraan3: 0, \n            kraan4: 0,\n            kraan5: 0, \n            vuur: 0, \n            weerstand: 0, \n            pomp: 0, \n            boodschap1: this.steps.boodschap[0], \n            boodschap2: this.steps.boodschap[1]},\n        condities: {\"button\"}\n    },\n    {\n        doel:'Maischvat vullen',\n        boodschap:[\"kraan 1 open, zet dan pomp aan\",`Vul maischtank met ${this.payload.maischWater}L, zet dan pomp uit`],  /*vul object aan*/\n        outputs:\n            {kraan1: 1, \n            kraan2: 0, \n            kraan3: 0, \n            kraan4: 0,\n            kraan5: 0, \n            vuur: 0, \n            weerstand: 0, \n            pomp: 0, \n            boodschap1: this.steps.boodschap[0], \n            boodschap2: this.steps.boodschap[1]},\n        condities: [\"button\"]\n    },\n    {\n        doel:'Vul opwarmtank 2de keer',\n        boodschap:[\"Zet de pomp uit en zet kraan1 dicht\",`Vul opwarmTank tot ${this.control.standaardVolumeOpwarmtank}L`], \n        outputs:\n            {kraan1: 0, \n            kraan2: 0, \n            kraan3: 0, \n            kraan4: 0,\n            kraan5: 0, \n            vuur: 0, \n            weerstand: 0, \n            pomp: 0, \n            boodschap1: this.steps.boodschap[0], \n            boodschap2: this.steps.boodschap[1]},\n        condities: [\"button\"]\n    },\n    {\n        doel:'Opwarmen opwarmtank',\n        boodschap:[\"Zet gasvuur aan stand 2\",`Zet weerstand aan`], \n        outputs:\n            {kraan1: 0, \n            kraan2: 0, \n            kraan3: 0, \n            kraan4: 0,\n            kraan5: 0, \n            vuur: 0, \n            weerstand: 0, \n            pomp: 0, \n            boodschap1: this.steps.boodschap[0], \n            boodschap2: this.steps.boodschap[1]},\n        condities: [\"button\"]\n    },\n    {\n        doel:'Opwarmen tot bepaald punt',\n        boodschap:[`Maak klaar: ${this.control.moutTekst}\n        ${this.control.hopTekst}`,`Zet weerstand aan`], \n        outputs:\n            {kraan1: 0, \n            kraan2: 0, \n            kraan3: 0, \n            kraan4: 0,\n            kraan5: 0, \n            vuur: 0, \n            weerstand: 0, \n            pomp: 0, \n            boodschap1: this.steps.boodschap[0], \n            boodschap2: this.steps.boodschap[1]},\n        condities: [\"button\"]\n    }\n    ],\n    process: {\n        currentStep: 0,\n        totalsteps: 0,\n        finished: false\n    }\n}\n*/\n    \n\n\n\n/* STEP */\n\n /*   {\n        doel:'Opwarmen tot bepaald punt',\n        boodschap:[`Maak klaar: ${this.control.moutTekst}\n        ${this.control.hopTekst}`,`Zet weerstand aan`], \n        outputs:\n            {kraan1: 0, \n            kraan2: 0, \n            kraan3: 0, \n            kraan4: 0,\n            kraan5: 0, \n            vuur: 0, \n            weerstand: 0, \n            pomp: 0, \n            boodschap1: this.steps.boodschap[0], \n            boodschap2: this.steps.boodschap[1]},\n        condities: [\"button\"]\n    }\n\n*/\n\n",
        "outputs": 3,
        "noerr": 9,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 460,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9b3aa0b4.07eb",
        "type": "inject",
        "z": "8dd021bb.b57a4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1460,
        "y": 720,
        "wires": [
            [
                "eeed1d6e.11893"
            ]
        ]
    },
    {
        "id": "eeed1d6e.11893",
        "type": "function",
        "z": "8dd021bb.b57a4",
        "name": "",
        "func": "const receptTestObject = {\n    payload: {\n                naam:\"effort fort\",\n                type:\"tripel\",\n                maischWater:50,\n                spoelWater:20,\n                kookTijd:80,\n                hops:[{soort:\"Saaz\",alfa:3.9,gewicht:150,in:5,uit:80},{soort:\"Saaz\",alfa:3.9,gewicht:50,in:15,uit:80},{soort:\"Target\",alfa:12.7,gewicht:100,in:75,uit:80},{soort:\"Aramis\",alfa:6.3,gewicht:60,in:75,uit:80}],\n                mouts:[{soort:\"ECB3\",gewicht:13.85},{soort:\"gerst\",gewicht:1}],\n                cycli:[{temp:62,\"tijd\":45},{temp:72,tijd:20},{temp:78,tijd:5}] \n            },\n    control: {\n                standaardMinimumOpwarmTank :20,\n                standaardVolumeOpwarmtank : 70,\n                aantalMout: function(){return this.payload.mouts.length},\n                aantalHops: function(){return this.payload.hops.length},\n                aantalCycli: function(){return this.payload.cycli.length},\n                vulOpwarmTank1: function(){return this.payload.maischWater + standaardMinimumOpwarmTank},\n                vulOpwarmTank2: function(){return this.payload.maischWater},\n                moutTekst: function(){ return this.payload.mouts.foreach((mout,i)=> `mout ${i}: ${mout.soort} gewicht: ${mout.gewicht}`).join('\\n')},\n                hopTekst: function(){ return this.payload.hops.foreach((hop,i)=> `hop ${i}: ${hop.soort} gewicht: ${hop.gewicht}`).join('\\n')},\n                zuursel: \"\"\n    },\n    steps:[\n    {\n        doel:'vul opwarmtank',\n        boodschap:[`Vul de opwarmTank met ${this.control.vulOpwarmTank1}}L water`,``], \n        outputs:\n            {\n                kraan1: 0, \n            kraan2: 0, \n            kraan3: 0, \n            kraan4: 0,\n            kraan5: 0, \n            vuur: 0, \n            weerstand: 0, \n            pomp: 0, \n            boodschap1: '', \n            boodschap2: ''\n            },\n        condities: [\"button\"]\n    },\n    {\n        doel:'Maischvat vullen',\n        boodschap:[\"kraan 1 open, zet dan pomp aan\",`Vul maischtank met ${function(){return this.payload.maischWater()}}L, zet dan pomp uit`],  /*vul object aan*/\n        outputs:\n            {kraan1: 1, \n            kraan2: 0, \n            kraan3: 0, \n            kraan4: 0,\n            kraan5: 0, \n            vuur: 0, \n            weerstand: 0, \n            pomp: 0, \n            boodschap1: '', \n            boodschap2: ''\n            },\n        condities: [\"button\"]\n    },\n    {\n        doel:'Vul opwarmtank 2de keer',\n        boodschap:[\"Zet de pomp uit en zet kraan1 dicht\",`Vul opwarmTank tot ${function(){return this.control.standaardVolumeOpwarmtank}}L`], \n        outputs:\n            {kraan1: 0, \n            kraan2: 0, \n            kraan3: 0, \n            kraan4: 0,\n            kraan5: 0, \n            vuur: 0, \n            weerstand: 0, \n            pomp: 0, \n            boodschap1: function(){return this.steps.boodschap[0]}, \n            boodschap2: function(){return this.steps.boodschap[1]}\n            },\n        condities: [\"button\"]\n    },\n    {\n        doel:'Opwarmen opwarmtank',\n        boodschap:[\"Zet gasvuur aan stand 2\",`Zet weerstand aan`], \n        outputs:\n            {kraan1: 0, \n            kraan2: 0, \n            kraan3: 0, \n            kraan4: 0,\n            kraan5: 0, \n            vuur: 0, \n            weerstand: 0, \n            pomp: 0, \n            boodschap1: function(){return this.steps.boodschap[0]}, \n            boodschap2: function(){return this.steps.boodschap[1]}\n            },\n        condities: [\"button\"]\n    },\n    {\n        doel:'Opwarmen tot bepaald punt',\n        boodschap:[`Maak klaar: ${function(){return this.control.moutTekst()}}\n        ${function(){return this.control.hopTekst()}}`,`Zet weerstand aan`], \n        outputs:\n            {kraan1: 0, \n            kraan2: 0, \n            kraan3: 0, \n            kraan4: 0,\n            kraan5: 0, \n            vuur: 0, \n            weerstand: 0, \n            pomp: 0, \n            boodschap1: function(){return this.steps.boodschap[0]}, \n            boodschap2: function(){return this.steps.boodschap[1]}\n                \n            },\n        condities: [\"button\"]\n    }\n    ],\n    process: {\n        currentStep: 0,\n        totalsteps: 0,\n        finished: false\n    }\n};\n\nreceptTestObject.steps[0].boodschap1 = receptTestObject.steps[0].boodschap[0];\nreceptTestObject.steps[0].boodschap2 = receptTestObject.steps[0].boodschap[1];\n\nreturn receptTestObject;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 720,
        "wires": [
            [
                "95f96542.1d9ba8"
            ]
        ]
    },
    {
        "id": "95f96542.1d9ba8",
        "type": "debug",
        "z": "8dd021bb.b57a4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2020,
        "y": 780,
        "wires": []
    },
    {
        "id": "a08909c1.936f48",
        "type": "ui_gauge",
        "z": "8dd021bb.b57a4",
        "name": "",
        "group": "4da78f89.fde46",
        "order": 11,
        "width": 5,
        "height": 4,
        "gtype": "donut",
        "title": "GASVUUR KOOK",
        "label": "STAND",
        "format": "{{msg.vuur}}",
        "min": "0",
        "max": "2",
        "colors": [
            "#00b500",
            "#ffa200",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "1",
        "x": 1670,
        "y": 1120,
        "wires": []
    },
    {
        "id": "f5f3479d.673db8",
        "type": "debug",
        "z": "8dd021bb.b57a4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 260,
        "wires": []
    }
]